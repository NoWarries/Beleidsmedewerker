generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Model

// Sever (Guild) configuration 
model Server {
  id String @id @unique // relation scalar field 

  loggingChannel String? 
  voteChannel String? 
  voteCouncilChannel String?
}

model Vote {
  id String @id
  channelId String
  messageId String

  status String
  message String

  chairManMessage String? 

  up Int? @default(0)
  down Int? @default(0)

  authorId String  
  author User @relation(fields: [authorId], references: [id], name: "author")

  chairmanId String?
  chairman User? @relation(fields: [chairmanId], references: [id], name: "chairman")
}

model User {
  id String @id // relation scalar field 
  firstSeen DateTime @default(now())

  perms Int @default(1)
  
  // User might have activity information
  activity Activity?
  // User might have progress (level/xp) information
  progress Progress?
  // User might have a vote
  votes Vote[] @relation("author")
  // User might have led a vote
  chairManForVotes Vote[] @relation("chairman")
}


model Activity {
  id String @id @unique // relation scalar field 
  
  updatedAt DateTime @updatedAt
  messages Int @default(0)
  minutes Int @default(0)
  
  user User @relation(fields: [id], references: [id], onDelete: Cascade)
}

model Progress {
  id String @id @unique // relation scalar field 
  
  level Int @default(1)
  xp Int @default(0)

  user User @relation(fields: [id], references: [id], onDelete: Cascade)
}

model Levels {
  level Int @id @unique // relation scalar field 
  xp Int @default(0)
}